version: "3.7"

services:


  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=0


  db:
    image: postgres:15.1-alpine
    container_name: db-app
    env_file:
      - .env.no
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_SERVER=${POSTGRES_SERVER}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 3



  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ylab_fastApi_app_with_tests
    env_file:
      - .env.no
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  rabbitmq:
    image: "rabbitmq"
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.no
    command:  celery -A python_code.my_celery.celery_main worker --loglevel=DEBUG
    depends_on:
      - app
      - rabbitmq

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.no
    command:  celery -A python_code.my_celery.celery_main beat --loglevel=DEBUG
    depends_on:
      - app
      - rabbitmq


  pytest:
    build:
      context: .
      dockerfile: Dockerfile-tests
    container_name: tests
    env_file:
      - .env.no
    environment:
      - HOST_FOR_TEST=${HOST_FOR_TEST}
    depends_on:
      app:
        condition: service_started
